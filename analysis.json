{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "A text form item.\n\nIf the browser has native support for FormData (and iterators) then it will also render\na content type selector for the input field.",
      "summary": "",
      "path": "multipart-text-form-item.js",
      "properties": [
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "Name of this control",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "Valuie of this control.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "model",
          "type": "Object | null | undefined",
          "description": "A view model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 135,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "docsOpened",
          "type": "boolean | null | undefined",
          "description": "True to render documentation (if set in model)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_mimeInput",
          "type": "HTMLElement | null | undefined",
          "description": "Reference to the mime type input",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "HTMLElement"
            }
          }
        },
        {
          "name": "type",
          "type": "string | null | undefined",
          "description": "A content type of the form field to be presented in the Multipart request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "suggestions",
          "type": "Array | null | undefined",
          "description": "List of suggested mime types",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[\"multipart-form-data\",\"application/x-www-form-urlencoded\",\"application/json\",\"application/xml\",\"application/base64\",\"application/octet-stream\",\"text/plain\",\"text/css\",\"text/html\",\"application/javascript\"]"
        },
        {
          "name": "hasFormData",
          "type": "boolean | null | undefined",
          "description": "If set it will also renders mime type selector for the input data.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 173,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_hasFormDataChanged\"",
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "toggleDocumentation",
          "description": "Toggles documentation (if available)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 2
            },
            "end": {
              "line": 181,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 2
            },
            "end": {
              "line": 188,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getValidity",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 2
            },
            "end": {
              "line": 192,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_hasFormDataChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasFormData"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setAutocompleteTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 2
            },
            "end": {
              "line": 206,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 207,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MultipartTextFormItem",
      "attributes": [
        {
          "name": "name",
          "description": "Name of this control",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "Valuie of this control.",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "model",
          "description": "A view model.",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 135,
              "column": 19
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "docs-opened",
          "description": "True to render documentation (if set in model)",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "type",
          "description": "A content type of the form field to be presented in the Multipart request.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "suggestions",
          "description": "List of suggested mime types",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "has-form-data",
          "description": "If set it will also renders mime type selector for the input data.",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 173,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "name-changed",
          "description": "Fired when the `name` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "type-changed",
          "description": "Fired when the `type` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "multipart-text-form-item"
    },
    {
      "description": "A file form item.",
      "summary": "",
      "path": "multipart-file-form-item.js",
      "properties": [
        {
          "name": "hasFile",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the control has a file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "Name of this control",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 6
            },
            "end": {
              "line": 127,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "Valuie of this control.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "model",
          "type": "Object | null | undefined",
          "description": "A view model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "docsOpened",
          "type": "boolean | null | undefined",
          "description": "True to render documentation (if set in model)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "toggleDocumentation",
          "description": "Toggles documentation (if available)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 2
            },
            "end": {
              "line": 150,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getValidity",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 2
            },
            "end": {
              "line": 154,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeHasFile",
          "description": "Tests if current value is a type of `Blob`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 2
            },
            "end": {
              "line": 163,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(String | Blob | File | undefined)",
              "description": "Value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_selectFile",
          "description": "A handler to choose file button click.\nThis function will find a proper input[type=\"file\"] and programatically click on it to open\nfile dialog.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 2
            },
            "end": {
              "line": 173,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fileObjectChanged",
          "description": "A handler to file change event for input[type=\"file\"].\nThis will update files array for corresponding `this.filesList` array object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 2
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeAccept",
          "description": "Computes the `accept`attribute for file input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 2
            },
            "end": {
              "line": 202,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object"
            }
          ],
          "return": {
            "type": "String"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 203,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MultipartFileFormItem",
      "attributes": [
        {
          "name": "has-file",
          "description": "Computed value, true if the control has a file.",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "name",
          "description": "Name of this control",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 6
            },
            "end": {
              "line": 127,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "Valuie of this control.",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "model",
          "description": "A view model.",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 19
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "docs-opened",
          "description": "True to render documentation (if set in model)",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "name-changed",
          "description": "Fired when the `name` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "multipart-file-form-item",
      "mixins": [
        "Polymer.IronValidatableBehavior"
      ]
    },
    {
      "description": "Multipart payload editor for ARC/API Console body editor.\n\nOn supported browsers (full support for FormData, Iterator and ArrayBuffer) it will render a\nUI controls to generate payload message preview.\n\nIt produces a FormData object that can be used in XHR / Fetch or transformed to ArrayBuffer to be\nused in socket connection.\n\n### Example\n```html\n<multipart-payload-editor value=\"{{form}}\"></multipart-payload-editor>\n```\n\n## Data model from FormData\n\nThe element creates a data model for the form view from FormData object.\nThe limitation of this solution is that the information about initial part type\nis lost. In case when the user specified the part as a text part but also added\npart content type it will be recognized as the file part.\n\nNote: this only works in browsers that support full FormData spec which rules\nout any Microsoft product. **You have to include polyfills for the FormData.**\n\n### Styling\n\n`<multipart-payload-editor>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--multipart-payload-editor` | Mixin applied to the element | `{}`\n`--multipart-payload-editor-code-preview` | Mixin applied to a code preview element | `{}`\n`--view-action-bar` | Theme mixin, applied to the content action bar | `{}`\n`--multipart-payload-editor-action-bar` | Mixin applied to the content action bar | `{}`\n`--body-editor-panel-button-active-background-color` | Background color of the active content action button | `#e0e0e0`\n`--body-editor-panel-button-active` | Mixin applied to active content action button | `{}`\n`--content-action-icon-color` | Color of the content action icon | `rgba(0, 0, 0, 0.74)`\n`--content-action-icon-color-hover` | Color of the content action icon when hovered | `--accent-color` or `rgba(0, 0, 0, 0.74)`\n`--inline-documentation-color` | Color of the description text from a RAML type. | `rgba(0, 0, 0, 0.87)`\n`--from-row-action-icon-color` | Color of the icon buttons next to the input fields | `--icon-button-color` or `rgba(0, 0, 0, 0.74)`\n`--from-row-action-icon-color-hover` | Color of the icon buttons next to the input fields when hovering | `--accent-color` or `rgba(0, 0, 0, 0.74)`,\n`--multipart-payload-editor-file-trigger-color` | Color of the file dialog trigger button. | `--accent-color` or `#FF5722`\n\nThis element also inherits styles from\n`advanced-rest-client/api-form-mixin/api-form-styles.html` element to\nstyle form controls.",
      "summary": "",
      "path": "multipart-payload-editor.js",
      "properties": [
        {
          "name": "model",
          "type": "Array | null | undefined",
          "description": "View model to use to render the form.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 38,
              "column": 8
            },
            "end": {
              "line": 41,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "optionalOpened",
          "type": "boolean | null | undefined",
          "description": "Set to true to show optional parameters (not required by the API).",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 45,
              "column": 8
            },
            "end": {
              "line": 48,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "hasOptional",
          "type": "boolean | null | undefined",
          "description": "Computed value from `allowHideOptional` and view model.\n`true` if current model has any optional property.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "allowHideOptional",
          "type": "boolean | null | undefined",
          "description": "If set it computes `hasOptional` property and shows checkbox in the\nform to show / hide optional properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 62,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 34
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "renderOptionalCheckbox",
          "type": "boolean | null | undefined",
          "description": "Computed flag to determine if optional checkbox can be rendered",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "allowDisableParams",
          "type": "boolean | null | undefined",
          "description": "If set, enable / disable param checkbox is rendered next to each\nform item.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 74,
              "column": 8
            },
            "end": {
              "line": 74,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "allowCustom",
          "type": "boolean | null | undefined",
          "description": "When set, renders \"add custom\" item button.\nIf the element is to be used withouth AMF model this should always\nbe enabled. Otherwise users won't be able to add a parameter.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 80,
              "column": 8
            },
            "end": {
              "line": 80,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "narrow",
          "type": "boolean | null | undefined",
          "description": "Renders items in \"narrow\" view",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 84,
              "column": 8
            },
            "end": {
              "line": 84,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "renderEmptyMessage",
          "type": "boolean | null | undefined",
          "description": "Computed value. The form renders empty message (if supported by\nthe form element). It occurs when model is not set and allowCustom\nis not set",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 90,
              "column": 8
            },
            "end": {
              "line": 94,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "value",
          "type": "FormData",
          "description": "Value of this form",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "hasFormDataSupport",
          "type": "boolean | null | undefined",
          "description": "True if the browser has native FormData support.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 220,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "previewOpened",
          "type": "boolean | null | undefined",
          "description": "true if the message preview is opened",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_previewOpenedChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "generatingPreview",
          "type": "boolean | null | undefined",
          "description": "true if the transformer is generating the message",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 228,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "messagePreview",
          "type": "string | null | undefined",
          "description": "Generated body message preview",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 6
            },
            "end": {
              "line": 230,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "computeFormRowClass",
          "description": "Computes class name for each form item depending on the item state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 120,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Model item"
            },
            {
              "name": "allowHideOptional",
              "type": "Boolean"
            },
            {
              "name": "optionalOpened",
              "type": "Boolean",
              "description": "True if optional parameters are rendered."
            },
            {
              "name": "allowDisableParams",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "String"
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "toggleOptionalParams",
          "description": "Toggles visibility of optional parameters.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "_getForm",
          "description": "Returns a reference to the form element, if the DOM is ready.\nThis only works with `iron-form` that is in the DOM.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "IronForm",
            "desc": "Iron form element. It may be `undefined` if local\nDOM is not yet initialized."
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "_getValidity",
          "description": "Validates the form. It uses `iron-form`'s `validate()` function to\nperform the validation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 155,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "Validation result or `true` if DOM is not yet ready."
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "serializeForm",
          "description": "Link to the form's serialize function.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 161,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "Serialized form values or `undefined` if DOM is not ready.\nNote, `undefined` is returned **only** if DOM is not yet ready."
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "_computeHasOptionalParameters",
          "description": "Computes if any of the parameters are required.\nIt iterates over the model to find any first element that has `required`\npropeerty set to `false`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 180,
              "column": 4
            },
            "end": {
              "line": 188,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "allowHideOptional",
              "type": "Boolean",
              "description": "State of `allowHideOptional` property.\nIf `false` this function always returns `false`."
            },
            {
              "name": "record",
              "type": "Object",
              "description": "Change record. Note, it does not checks for\noptional parameters each time the model changes. It rescans the model\nwhen splices changed."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "`true` if model has at leas one alement that is not required."
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "_computeRenderCheckbox",
          "description": "Computes value for `renderOptionalCheckbox` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 196,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "render",
              "type": "Boolean",
              "description": "Value of `allowHideOptional` property"
            },
            {
              "name": "has",
              "type": "Boolean",
              "description": "Value of `hasOptional` property."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if both values are `true`."
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "_computeIsCustom",
          "description": "Computes if given model item is a custom property (not generated by\nAMF model transformation).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Model item."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "`true` if `isCustom` property is set on model's schema\nproperty."
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "addCustom",
          "description": "Adds empty custom property to the list.\n\nIt dispatches `api-property-model-build` custom event that is handled by\n`api-view-model-transformer` to build model item.\nThis assumem that the transformer element is already in the DOM.\n\nAfter the transformation the element pushes or sets the data to the\n`model`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 226,
              "column": 4
            },
            "end": {
              "line": 252,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "binding",
              "type": "String",
              "description": "Value if the `binding` property."
            },
            {
              "name": "opts",
              "type": "Object",
              "description": "Additional options:\n- inputLabel {String} - Forces a label of the input"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "_removeCustom",
          "description": "Removes custom item from the UI.\nThis can only be called from `dom-repeat` element so it contain's\n`model` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 260,
              "column": 4
            },
            "end": {
              "line": 262,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "computeIsOptional",
          "description": "Computes if model item is optional.\nThe items is always optional if is not required and when `hasOptional`\nis set to `true`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 272,
              "column": 4
            },
            "end": {
              "line": 280,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasOptional",
              "type": "Boolean",
              "description": "[description]"
            },
            {
              "name": "model",
              "type": "Object",
              "description": "Model item."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "`true` if the model item is optional in the form."
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "_computeRenderEmptyMessage",
          "description": "Computes value for `renderEmptyMessage`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 288,
              "column": 4
            },
            "end": {
              "line": 290,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "allowCustom",
              "type": "Boolean",
              "description": "True if the form allows to add custom values."
            },
            {
              "name": "model",
              "type": "?Array",
              "description": "Current model"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "`true` when allowCustom is falsy set and model is empty"
          },
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 2
            },
            "end": {
              "line": 245,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "addFile",
          "description": "Appends new file form row.\nThis changes `model`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 2
            },
            "end": {
              "line": 257,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "addText",
          "description": "Appends empty text field to the form.\nThis changes `model`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 2
            },
            "end": {
              "line": 272,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valueChanged",
          "description": "Handler for value change.\nIf the element is opened then it will fire change event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 2
            },
            "end": {
              "line": 293,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "FormData"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_restoreFormData",
          "description": "Transforms FormData into the data model.\nSets new model data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 2
            },
            "end": {
              "line": 316,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data",
              "type": "FormData",
              "description": "Form data to be restored."
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_modelForParts",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 2
            },
            "end": {
              "line": 368,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entries",
              "type": "Iterator"
            },
            {
              "name": "textParts",
              "type": "Array"
            },
            {
              "name": "result",
              "type": "Array"
            }
          ],
          "return": {
            "type": "Promise.<Array>"
          }
        },
        {
          "name": "_createModelObject",
          "description": "It dispatches `api-property-model-build` custom event that is handled by\n`api-view-model-transformer` to build model item.\nThis assumes that the transformer element is already in the DOM.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 2
            },
            "end": {
              "line": 386,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "defs",
              "type": "Object",
              "description": "Defaults for model"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Tranformed object."
          }
        },
        {
          "name": "_blobToString",
          "description": "Transforms `Blob` to string.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 2
            },
            "end": {
              "line": 410,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "blob",
              "type": "Blob",
              "description": "A blob to read."
            }
          ],
          "return": {
            "type": "Promise.<String>",
            "desc": "Read content."
          }
        },
        {
          "name": "_modelAndValueMatch",
          "description": "Tests if current model and FormData object represent the same form data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 419,
              "column": 2
            },
            "end": {
              "line": 447,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "Model to test"
            },
            {
              "name": "value",
              "type": "FormData",
              "description": "Form data with values"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if model represents data in FormData object"
          }
        },
        {
          "name": "_previewOpenedChanged",
          "description": "Generates a message and displays highlighted content of the message.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 449,
              "column": 2
            },
            "end": {
              "line": 477,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeToggleIcon",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 479,
              "column": 2
            },
            "end": {
              "line": 481,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "previewOpened"
            }
          ]
        },
        {
          "name": "_modelChanged",
          "description": "Called when the model chage. Regenerates the FormData object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 488,
              "column": 2
            },
            "end": {
              "line": 500,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record",
              "type": "Object",
              "description": "Polymer change record"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "createFormData",
          "description": "Generates FormData from the model.\nFor the browsers with full FormData support it will generate Form data object from form\nelement. It means that it will have only basic support.\nFor browsers with full FormData support it will contain all properties (including\nmime types).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 510,
              "column": 2
            },
            "end": {
              "line": 516,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "View data model."
            }
          ]
        },
        {
          "name": "_getFormData",
          "description": "Generates the FormData object from the model instead of the form.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 523,
              "column": 2
            },
            "end": {
              "line": 557,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "The model to generate form data from."
            }
          ],
          "return": {
            "type": "(FormData | undefined)",
            "desc": "Form data from model or undefined if model is empty."
          }
        },
        {
          "name": "_getLegacyFormData",
          "description": "Returns a FormData object depending if current form has any value.\nText items can be empty.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 566,
              "column": 2
            },
            "end": {
              "line": 577,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "The model to generate form data from."
            }
          ],
          "return": {
            "type": "(FormData | undefined)",
            "desc": "Form data from model or undefined if model\nis empty."
          }
        },
        {
          "name": "_generatePreview",
          "description": "Generates a preview message from the FormData object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 584,
              "column": 2
            },
            "end": {
              "line": 601,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise",
            "desc": "A promise fulfilled with the content. Content can be undefined\nif message couldn't be generated because of lack of support."
          }
        },
        {
          "name": "_copyToClipboard",
          "description": "Handler for copy to clipboard click.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 603,
              "column": 2
            },
            "end": {
              "line": 620,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/simple.html",
          "description": "Simple usage"
        },
        {
          "url": "demo/raml.html",
          "description": "With AMF model from RAML file"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 90,
          "column": 0
        },
        "end": {
          "line": 621,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ApiComponents.MultipartPayloadEditor",
      "attributes": [
        {
          "name": "model",
          "description": "View model to use to render the form.",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 38,
              "column": 8
            },
            "end": {
              "line": 41,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined",
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "optional-opened",
          "description": "Set to true to show optional parameters (not required by the API).",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 45,
              "column": 8
            },
            "end": {
              "line": 48,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "has-optional",
          "description": "Computed value from `allowHideOptional` and view model.\n`true` if current model has any optional property.",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "allow-hide-optional",
          "description": "If set it computes `hasOptional` property and shows checkbox in the\nform to show / hide optional properties.",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 62,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 34
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "render-optional-checkbox",
          "description": "Computed flag to determine if optional checkbox can be rendered",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "allow-disable-params",
          "description": "If set, enable / disable param checkbox is rendered next to each\nform item.",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 74,
              "column": 8
            },
            "end": {
              "line": 74,
              "column": 35
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "allow-custom",
          "description": "When set, renders \"add custom\" item button.\nIf the element is to be used withouth AMF model this should always\nbe enabled. Otherwise users won't be able to add a parameter.",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 80,
              "column": 8
            },
            "end": {
              "line": 80,
              "column": 28
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "narrow",
          "description": "Renders items in \"narrow\" view",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 84,
              "column": 8
            },
            "end": {
              "line": 84,
              "column": 23
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "render-empty-message",
          "description": "Computed value. The form renders empty message (if supported by\nthe form element). It occurs when model is not set and allowCustom\nis not set",
          "sourceRange": {
            "file": "../@api-components/api-form-mixin/api-form-mixin.js",
            "start": {
              "line": 90,
              "column": 8
            },
            "end": {
              "line": 94,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.ApiFormMixin"
        },
        {
          "name": "value",
          "description": "Value of this form",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "type": "FormData"
        },
        {
          "name": "has-form-data-support",
          "description": "True if the browser has native FormData support.",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 220,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "preview-opened",
          "description": "true if the message preview is opened",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "generating-preview",
          "description": "true if the transformer is generating the message",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 228,
              "column": 32
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "message-preview",
          "description": "Generated body message preview",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 6
            },
            "end": {
              "line": 230,
              "column": 28
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "multipart-payload-editor",
      "mixins": [
        "ApiFormMixin"
      ]
    }
  ]
}
